/**
 * Test App API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { Author } from '../model/models';
import { Book } from '../model/models';


import { Configuration }                                     from '../configuration';


export interface CreateAuthorRequestParams {
    author?: Author;
}

export interface CreateBookRequestParams {
    book?: Book;
}

export interface DestroyAuthorRequestParams {
    id: string;
}

export interface DestroyBookRequestParams {
    id: string;
}

export interface PartialUpdateAuthorRequestParams {
    id: string;
    author?: Author;
}

export interface PartialUpdateBookRequestParams {
    id: string;
    book?: Book;
}

export interface RetrieveAuthorRequestParams {
    id: string;
}

export interface RetrieveBookRequestParams {
    id: string;
}

export interface UpdateAuthorRequestParams {
    id: string;
    author?: Author;
}

export interface UpdateBookRequestParams {
    id: string;
    book?: Book;
}


export interface LibraryServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * 
     * AuthorViewSet is a viewset for handling CRUD operations on Author model.
* @param requestParameters
     */
    createAuthor(requestParameters: CreateAuthorRequestParams, extraHttpRequestParams?: any): Observable<Author>;

    /**
     * 
     * A viewset for viewing and editing book instances.  This viewset provides &#x60;list&#x60;, &#x60;create&#x60;, &#x60;retrieve&#x60;, &#x60;update&#x60; and &#x60;destroy&#x60; actions for the Book model.
* @param requestParameters
     */
    createBook(requestParameters: CreateBookRequestParams, extraHttpRequestParams?: any): Observable<Book>;

    /**
     * 
     * AuthorViewSet is a viewset for handling CRUD operations on Author model.
* @param requestParameters
     */
    destroyAuthor(requestParameters: DestroyAuthorRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * A viewset for viewing and editing book instances.  This viewset provides &#x60;list&#x60;, &#x60;create&#x60;, &#x60;retrieve&#x60;, &#x60;update&#x60; and &#x60;destroy&#x60; actions for the Book model.
* @param requestParameters
     */
    destroyBook(requestParameters: DestroyBookRequestParams, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * AuthorViewSet is a viewset for handling CRUD operations on Author model.
*/
    listAuthors(extraHttpRequestParams?: any): Observable<Array<Author>>;

    /**
     * 
     * A viewset for viewing and editing book instances.  This viewset provides &#x60;list&#x60;, &#x60;create&#x60;, &#x60;retrieve&#x60;, &#x60;update&#x60; and &#x60;destroy&#x60; actions for the Book model.
*/
    listBooks(extraHttpRequestParams?: any): Observable<Array<Book>>;

    /**
     * 
     * AuthorViewSet is a viewset for handling CRUD operations on Author model.
* @param requestParameters
     */
    partialUpdateAuthor(requestParameters: PartialUpdateAuthorRequestParams, extraHttpRequestParams?: any): Observable<Author>;

    /**
     * 
     * A viewset for viewing and editing book instances.  This viewset provides &#x60;list&#x60;, &#x60;create&#x60;, &#x60;retrieve&#x60;, &#x60;update&#x60; and &#x60;destroy&#x60; actions for the Book model.
* @param requestParameters
     */
    partialUpdateBook(requestParameters: PartialUpdateBookRequestParams, extraHttpRequestParams?: any): Observable<Book>;

    /**
     * 
     * AuthorViewSet is a viewset for handling CRUD operations on Author model.
* @param requestParameters
     */
    retrieveAuthor(requestParameters: RetrieveAuthorRequestParams, extraHttpRequestParams?: any): Observable<Author>;

    /**
     * 
     * A viewset for viewing and editing book instances.  This viewset provides &#x60;list&#x60;, &#x60;create&#x60;, &#x60;retrieve&#x60;, &#x60;update&#x60; and &#x60;destroy&#x60; actions for the Book model.
* @param requestParameters
     */
    retrieveBook(requestParameters: RetrieveBookRequestParams, extraHttpRequestParams?: any): Observable<Book>;

    /**
     * 
     * AuthorViewSet is a viewset for handling CRUD operations on Author model.
* @param requestParameters
     */
    updateAuthor(requestParameters: UpdateAuthorRequestParams, extraHttpRequestParams?: any): Observable<Author>;

    /**
     * 
     * A viewset for viewing and editing book instances.  This viewset provides &#x60;list&#x60;, &#x60;create&#x60;, &#x60;retrieve&#x60;, &#x60;update&#x60; and &#x60;destroy&#x60; actions for the Book model.
* @param requestParameters
     */
    updateBook(requestParameters: UpdateBookRequestParams, extraHttpRequestParams?: any): Observable<Book>;

}
